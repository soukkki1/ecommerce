services:
  ecommerce-db:
    image: postgres:latest
    container_name: ecommerce-db
    environment:
      POSTGRES_USER: ecommerce
      POSTGRES_PASSWORD: ecommerce
      POSTGRES_DB: ecommerce
    ports:
      - "5434:5432"
    volumes:
      - ecommerce_data:/var/lib/postgresql/data

  vault:
    image: hashicorp/vault:1.14.0
    container_name: ecommerce-vault
    restart: always
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
    command: ["vault", "server", "-config=/vault/config/vault.hcl"]
    volumes:
      - ./vault.hcl:/vault/config/vault.hcl
      - vault_data:/vault/data

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-postgres:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar

  sonar-postgres:
    image: postgres:latest
    container_name: sonar-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  keycloak-db:
    image: postgres:latest
    container_name: keycloak-db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  clamav:
    image: clamav/clamav
    container_name: clamav
    restart: always
    ports:
      - "3310:3310"  # ClamAV listens on port 3310
    environment:
      - CLAMD_CONF_MaxFileSize=25M  # Allow scanning up to 25MB files
    healthcheck:
      test: [ "CMD", "clamdscan", "--version" ]
      interval: 30s
      retries: 3
      start_period: 10s

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: keycloak
    command: start-dev --db=postgres --db-url=jdbc:postgresql://keycloak-db:5432/keycloak --db-username=keycloak --db-password=keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db

  # Elasticsearch for storing logs and traces
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false  # Disable security
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  # Logstash for collecting and processing logs
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.4
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"  # Port for receiving logs from Spring Boot
      - "5044:5044"  # Logstash Filebeat input
      - "9600:9600"  # Logstash monitoring API
    depends_on:
      - elasticsearch

  # Kibana for visualizing logs
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    volumes:
      - kibana_data:/usr/share/kibana/data

  # APM Server for performance monitoring & tracing
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.4
    container_name: apm-server
    environment:
      - setup.kibana.host=kibana:5601
      - kibana.enabled=true
      - kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    ports:
      - "8201:8200"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
      - kibana

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.4
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:rw
      - C:/okokok/ecommerce-app/logs:/host_logs:ro
    command: ["--strict.perms=false"]
    depends_on:
      - logstash

networks:
  default:
    name: ecommerce-network

volumes:
  keycloak_data:
  ecommerce_data:
  redis_data:
  vault_data:
  kibana_data:
    driver: local
  elasticsearch_data:
    driver: local